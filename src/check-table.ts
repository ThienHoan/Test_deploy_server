import { Pool } from 'pg';

async function checkTableStructure() {
  const pool = new Pool({
    connectionString: 'postgres://postgres:%40Thien1411@localhost:5432/day4',
  });

  try {
    console.log('üîç Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng users...');
    
    // Ki·ªÉm tra xem b·∫£ng users c√≥ t·ªìn t·∫°i kh√¥ng
    const tableExists = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'users'
      );
    `);
    
    console.log('üìã B·∫£ng users c√≥ t·ªìn t·∫°i:', tableExists.rows[0].exists);
    
    if (tableExists.rows[0].exists) {
      // Ki·ªÉm tra c·∫•u tr√∫c c·ªôt
      const columns = await pool.query(`
        SELECT column_name, data_type, is_nullable, column_default
        FROM information_schema.columns 
        WHERE table_name = 'users' 
        AND table_schema = 'public'
        ORDER BY ordinal_position;
      `);
      
      console.log('üìä C·∫•u tr√∫c b·∫£ng hi·ªán t·∫°i:');
      columns.rows.forEach(col => {
        console.log(`  - ${col.column_name}: ${col.data_type} (nullable: ${col.is_nullable})`);
      });
      
      // ƒê·ªÅ xu·∫•t gi·∫£i ph√°p
      console.log('\nüí° Gi·∫£i ph√°p:');
      console.log('1. X√≥a b·∫£ng c≈© v√† t·∫°o l·∫°i:');
      console.log('   DROP TABLE users;');
      console.log('2. Ho·∫∑c ch·∫°y l·∫°i migration');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  } finally {
    await pool.end();
  }
}

checkTableStructure();
